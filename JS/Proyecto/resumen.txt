//EJERCICIOS PROMPT

const prompt = require("prompt-sync") ({ sigint: true });

let numero2 = parseInt(prompt('ingrese numero: '));

function numerosAleatorios() {
    let aleatorio = Math.round(Math.random()*10);
        if (numero2 == aleatorio) {
            console.log('adivinaste');
        } else {
            alert("Número aleatorio entre 0 y 10:"+aleatorio);
        }
    }

//const prompt = require("prompt-sync") ({ sigint: true });

let nacimiento = parseInt(prompt('anio de nacimiento: '));

//console.log('tienes ' + (2022-nacimiento) + 'años ');
    
//const prompt = require("prompt-sync") ({ sigint: true });
let nombre = prompt ('escriba su nombre: ');

//console.log ('hola ' + nombre + '!');

//const prompt = require("prompt-sync") ({ sigint: true });

let numero1 = parseInt(prompt('n1: '));
//let numero2 = parseInt(prompt('n2: '));

//console.log(numero1 + numero2);


//LOOP

function loopDePares (numero) {
    for (let index = 0; index <= 100; index++) {
        if ((index + numero) % 2 === 0) {
            console.log('El numero' + (index + numero) + 'es par');
        } else {
            console.log(index);
        }
    }
}
loopDePares(1);

function loopDeImpares (numero, palabra) {
    for (let index = 0; index <= 100; index++) {
        if ((index + numero) % 2 !== 0) {
            console.log(palabra + (index + numero));
        } else {
            console.log(index);
        }
    }
}
loopDeImpares(3, 'hola');

function sumatoria(numero) {
    for (let index = 0; index < numero; index++) {
        console.log (numero + " + " + index + " = "  + (numero + index));
    }
}

sumatoria(3);


function sumatoria (numero) {
    let resultado = 0;
    for (let index = 0; index < numero.length; index++) {
        resultado = numero + array[index];
    }
    return resultado;
}

//console.log(sumatoria(3));

function nuevoArreglo (numero) {
let arrayArreglo = [];
for (let index = 1; index <= numero; index++) {
 arrayArreglo.push (index);
    }
    return arrayArreglo;
}

//console.log (nuevoArreglo(10));

function split2(string) {
    let resultado = [];
    for (let i = 0; i < string.length; i++) {
        resultado.push (string[i]);
    }
    return resultado;
}
    
//console.log(split2('hola'));

function caracterDelMedio(palabra) {
    if (palabra.length % 2 === 0) {
        return palabra.slice ((palabra.length/2)-1,(palabra.length/2)+1); OL
    }
    else {
        return palabra.slice ((palabra.length -1) / 2, (palabra.length -1) /2 +1)
    }
}
 
//console.log (caracterDelMedio('Digital House'));

//OBJETOS BANCO 

let arrayCuentas = [
    {
      nroCuenta: 5486273622,
      tipoDeCuenta: "Cuenta Corriente",
      saldoEnPesos: 27771,
      titularCuenta: "Abigael Natte",
    },
    {
      nroCuenta: 1183971869,
      tipoDeCuenta: "Caja de Ahorro",
      saldoEnPesos: 8675,
      titularCuenta: "Ramon Connell",
    },
    {
      nroCuenta: 9582019689,
      tipoDeCuenta: "Caja de Ahorro",
      saldoEnPesos: 27363,
      titularCuenta: "Jarret Lafuente",
    },
    {
      nroCuenta: 1761924656,
      tipoDeCuenta: "Cuenta Corriente",
      saldoEnPesos: 32415,
      titularCuenta: "Ansel Ardley",
    },
    {
      nroCuenta: 7401971607,
      tipoDeCuenta: "Cuenta Unica",
      saldoEnPesos: 18789,
      titularCuenta: "Jacki Shurmer",
    },
  ];
  
  //Nos solicitan también crear un objeto literal llamado “banco”, el cual tendrá una propiedad llamada “clientes” 
  //que estará compuesta de la lista de objetos obtenidos en el punto anterior.
  //Al objeto “banco”, crearle un método llamado consultarCliente, el cual recibirá un nombre (titular) por parámetro,
  //deberá buscarlo en la lista de cuentas y retornar el objeto cliente que corresponda con ese nombre ingresado.
  //Ayuda: let clienteEncontrado = banco.consultarCliente(“Ramon Connell”);
  
       
  let banco = {
    clientes: arrayCuentas,
    consultarCliente: function (titular){
        for(let i = 0; i < this.clientes.length; i++){
            if(titular == this.clientes[i].titularCuenta){
                return this.clientes[i]
            }else{
              return 
            }
        }   
    },
    consultarNroCuenta: function (nroCuenta){
        for(let i = 0; i < this.clientes.length;i++){
            if(nroCuenta == this.clientes[i].nroCuenta){
                return this.clientes[i]
            }
        }
    },
    // Crear otro método llamado depósito que recibirá dos parámetros: el titular de cuenta y una cantidad de dinero a
    // depositar. El método debe obtener la cuenta correspondiente y luego sumar la cantidad de dinero a depositar a saldo en pesos. Luego, deberá dar un aviso por la consola con el mensaje “Depósito realizado, su nuevo saldo es: XXXX”.
  
    deposito: function(titular,importeADepositar){
                banco.consultarCliente(titular)
                console.log(`Bienvenido ${titular}!`)
                let nuevoSaldo = this.consultarCliente(titular).saldoEnPesos + importeADepositar;
                return `Deposito realizado, su nuevo saldo es $${nuevoSaldo}.-`;
  
    },
  
    // Crear un último método llamado extracción que recibirá también dos parámetros: el titular de cuenta y el monto a 
    //extraer. El método debe obtener la cuenta correspondiente y restar el monto al saldo actual. En caso de que el 
    //resultado sea menor a 0, deberá imprimir un mensaje por la consola de “Fondos insuficientes”. De lo contrario, 
    //deberá imprimir “Extracción realizada correctamente, su nuevo saldo es: XXXX”.
  
    extraccion: function (titular,importeAExtraer) {
        banco.consultarCliente(titular)
        console.log(`Bienvenido ${titular}`)
        let nuevoSaldo = this.consultarCliente(titular).saldoEnPesos - importeAExtraer;
        if(importeAExtraer > this.consultarCliente(titular).saldoEnPesos){
            return `Fondos Insuficientes`
        }else{
            return `Extracción realizada correctamente, su nuevo saldo es: ${nuevoSaldo}`
        }
    }    
}

//MASCOTAS

let arraymisMascotas = [
    {
        nombre: 'Pepito',
        raza: 'Dogo',
        edad : 10,
        sonido: ladrido,
        sonidoMascota : function () {
            return `${this.sonido} ${this.sonido}`;
        }
    }
];

function aumentarEdad () {
    for (let index = 0; index < array.length; index++) {
        array[index].edad = array[index].edad + 1;
    }
}

//console.log(aumentaredad(arraymisMascotas));

function aumentarEdad2 () {
    for (let index = 0; index < array.length; index++) {
        if (array[index].edad <= 6) {
            array[index].edad = array[index].edad + 1;
        } else if (array[index].edad > 6 && array[index].edad <= 10) {
            array[index].edad = array[index].edad + 2;
        } else if (array[index].edad >10) {
            array[index].edad = array[index].edad + (array[index].edad/2);
        }
    }
} 

//console.log(aumentarEdad2(arraymisMascotas));

function id (array) {
    for (let index = 0; index < array.length; index++) {
        array[index].identificador = index + 1;
    }
}

//console.log(id(arraymisMascotas));

function eliminar (array) {
    for (let index = 0; index < array.length; index++) {
        delete array[index].raza;
    }
}

//console.log(eliminar(arraymisMascotas));

//ALICIA Y BOB 

const alicia = [10, 80, 75];
const bob = [90, 20, 25];
let arrayEtapas = [];

function encontrarGanador (alicia, bob) {
    let resultadoAlicia = 0;
    let resultadoBob = 0;
    for (let index = 0; index < alicia.length; index++) {
        if (alicia[index] < bob[index]) {
            resultadoAlicia = resultadoAlicia + 1;
            arrayEtapas.push ('Alicia');
        } else if (alicia[index] > bob[index]) {
            resultadoBob = resultadoBob + 1;
            arrayEtapas.push ('Bob');
        }
    }
    if (resultadoAlicia>resultadoBob) {
        return 'Alicia';
    } else if (resultadoAlicia < resultadoBob) {
        return 'Bob';
    } else {
        return 'Empate';
    }
}
//console.log('El ganador es: ' + encontrarGanador(alicia, bob));

let concurso = {
    etapas : arrayEtapas,
    ganador : encontrarGanador(alicia, bob),
    encontrarGanador : function () {
        console.log('El ganador es: ' + this.ganador);
    }
}

//console.log(concurso);
concurso.encontrarGanador();

let bimestraMasUno = {
    array2 : objetos,
    siguienteCursada : function (arrayClase) {
        for (let index = 0; index < this.array2.length; index++) {
            this.array2[index].bimestre = this.array2[index].bimestre + 1;
        }
    }
}

let bimestreUno = bimestraMasUno.siguienteCursada(arrayClase);
//console.log(siguienteCursada(arrayClase));

//ARRAY MENOR/MAYOR ETC..

const arrayEdades = [11, 12, 15, 18, 25, 22, 10, 33, 18, 5];

function cambio(array) {
    let arrayMenor18 = [];
    for (let index = 0; index < array.length; index++) {
        if (array[index] < 18) {
            arrayMenor18.push(arrayEdades[index]);
        }
    }
    return arrayMenor18;
    
}

//console.log(cambio(arrayEdades));

function cambio2(array) {
    let arrayMayor18 = [];
    for (let index = 0; index < array.length; index++) {
        if (array[index] >= 18) {
            arrayMayor18.push(arrayEdades[index]);
        }
    }
    return arrayMayor18;
}

//console.log(cambio2(arrayEdades));

function cambio3(array) {
    let arrayIgual18 = [];
    for (let index = 0; index < array.length; index++) {
        if (array[index] == 18) {
            arrayIgual18.push(arrayEdades[index]);
        }
    }
    return arrayIgual18;
}

//console.log(cambio3(arrayEdades));

function menor(array) {
    let elMenor = arrayEdades[0];
    for (let index = 1; index < array.length; index++) {
        if (array [index] < elMenor) {
           elMmenor = array[index];
        }
    }
    return elMenor;
}

//console.log(menor(arrayEdades));

function promedio(array) {
    let resultado = 0;
    for (let index = 0; index < array.length; index++) {
        resultado = resultado + array[index];
    }
    return resultado/array.length;
}

//console.log(promedio(arrayEdades)); 

function suma(array) {
    let incremento = 0;
    for (let index = 0; index < array.length; index++) {
        resultado = resultado + array[index];
    }
    return incremento;
}

//console.log(suma(arrayEdades)); 

const arrayCuentas2 = [
    {
      titular: "Arlene Barr",
      estaHabilitada: false,
      saldo: "$3,253.40",
      edadTitular: 33,
      tipoCuenta: "sueldo"
    },
    {
      titular: "Roslyn Torres",
      estaHabilitada: false,
      saldo: "$3,229.45",
      edadTitular: 27,
      tipoCuenta: "sueldo"
    },
    {
      titular: "Cleo Lopez",
      estaHabilitada: true,
      saldo: "$1,360.19",
      edadTitular: 34,
      tipoCuenta: "corriente"
    },
    {
      titular: "Daniel Malone",
      estaHabilitada: false,
      saldo: "$3,627.12",
      edadTitular: 30,
      tipoCuenta: "sueldo"
    },
    {
      titular: "Ethel Leon",
      estaHabilitada: true,
      saldo: "$1,616.52",
      edadTitular: 34,
      tipoCuenta: "sueldo"
    },
    {
      titular: "Harding Mitchell",
      estaHabilitada: true,
      saldo: "$1,408.68",
      edadTitular: 25,
      tipoCuenta: "corriente"
    }
]

function menores (array) {
    let menor30;
    for (let index = 0; index < array.length; index++) {
        if (array[index].edadTitular < 30) {
            menor30.push(array[index]);
        }
    }
    return menor30;
}

//console.log(menores(arrayCuentas2));
//console.log('la edad es ' + menor30(arrayCuentas2)[0].edadTitular);

function mayores (array) {
    let mayorigual30;
    for (let index = 0; index < array.length; index++) {
        if (array[index].edadTitular >= 30) {
            mayorigual30.push(array[index]);
        }
    }
    return mayorigual30;
}

//console.log(mayorigual30(arrayCuentas2));

function igual (array) {
    let igual30;
    for (let index = 0; index < array.length; index++) {
        if (array[index].edadTitular == 30) {
            igual30.push(array[index]);
        }
    }
    return igual30;
}

//console.log(mayorigual30(arrayCuentas2));

function joven(array) {
    let elJoven = arrayCuentas[0];
    for (let index = 1; index < array.length; index++) {
        if (array [index] < elJoven) {
           elJoven = array[index];
        }
    }
    return elJoven;
}

function habilitadas () {
    let habilitada = [];
    let deshabilitada = [];
    for (let index = 0; index < arrayCuentas.length; index++) {
        if (arrayCuentas[index].estaHabilitada == true) {
            habilitada.push(arrayCuentas[index].estaHabilitada);
        } else {
            deshabilitada.push(arrayCuentas[index].estaHabilitada);
        }
    }
}

//FIZZBUZ ETC

/* Escribir un programa que muestre en pantalla los números del 1 al 100,
sustituyendo los múltiplos de 3 por la palabra “fizz”, los múltiplos de 5 por
“buzz” y los múltiplos de ambos, es decir, los múltiplos de 3 y 5 —o de 15—,
por la palabra “fizzbuzz”. */

function multiplos (numero) {
    for (let index = 1; index < 100; index++) {
        if (index % 3 === 0 && index % 5 === 0) {
            console.log('Fizzbuz');
        }
         else if (index % 5 === 0) {
            console.log('Buzz');
        } else if (index % 3 === 0) {
            console.log('Fizz');
        } else {
            console.log(index);
        }
    }
}

//console.log(multiplos(15));

/* Escriban una función que reciba dos parámetros: un array y un índice. La
función deberá de mostrar por consola el valor del elemento según el
índice dado. Por ejemplo, dada la siguiente array e índice, la función
imprimirá '6'. let array =
[3,6,67,6,23,11,100,8,93,0,17,24,7,1,33,45,28,33,23,12,99,100]; var index = 1; */

/* Escribir una función que, dado un número de mes, devuelva la cantidad
de días de ese mes —suponiendo que no es un año bisiesto—. */

function diasDelMes (numero) {
    for (let index = 1; index <= 30; index++) {
        if (numero % 3 ===0) {
            console.log(index);
        } else if (numero === 2) {
            console.log(index - 2);
        }
        else {
            console.log(index + 1);
        }
    }
}

//console.log(diasDelMes(2));

/* Escribir una función de JavaScript que invierta un número. Por ejemplo,
si x = 32443, la salida debería ser 34423.*/


/*
 * Escriba una función que reciba dos parámetros:
 * una array y un índice. La función mostrar por consola
 * el valor del elemento en la posición dada
 * (basado en uno). Por ejemplo, dado el siguiente
 * array:
 */
 let array = [
	3,
	6,
	67,
	6,
	23,
	11,
	100,
	8,
	93,
	0,
	17,
	24,
	7,
	1,
	33,
	45,
	28,
	33,
	23,
	12,
	99,
	100
];

/**
* Y el siguiente indice:
*/

let indice = 1;

/**
* La funcion debera mostrar por consola el numero 6.
*/

// Extra: que pasa si cambias el valor de la variable indice a 10?
// Si tu función esta bien, deberias ver el numero 17 por consola.

// Escribe tu función debajo de esta linea.

function funcion2 (array, indice) {
    for (let index = 0; index < array.length; index++) {
        if (index[x] === indice) {
            console.log(index);
        } 
    }
} 

//console.log(funcion2(array, indice));


// Invoca tu función debajo de esta linea.

//MATRICES 7-04

/*Los gastos estarán en una matriz de 4x7, cada fila representa una semana y cada columna un día. Es decir fila 0, 
semana 1, fila 1, semana 2, etc. Columna 0, dia 1, columna 1, dia 2, etcétera. */

let gastosMensuales = 
[
    [1135, 2500, 900, 1600, 2800,3650, 1100],
    [1750, 1890, 1900, 1300, 898, 1750, 2800],
    [1700, 1150, 1690, 1900, 1770, 4500, 2560],
    [800, 1250, 1430, 2100, 1980, 1270, 950]
]
/*a)  Lo que nos solicitan es dar el total de gastos en una semana. Recordemos que cada fila representa una semana, 
es decir, si nos indican semana 2 tenemos que sumar la fila 1 de la matriz. Recordar que las matrices comienzan siempre
 en posición 0. 
*/

function gastosxsemana(matriz, semana) { //pasa dos parametros para usarlos en la funcion
    let totalSemanal = 0; //acumulador
    for (let i = 0; i < matriz.length; i++) { 
       for (let j = 0; j < matriz[i].length; j++) { //desde i para q me recorra todo
           if (i == semana - 1) { //condición es q el indice es = al num q le pasas x parametro a la función, es decir la semana. El -1 va porque las matrices comienzan siempre
                                  //en posición 0
                                  //Lo que va a hacer es buscar la posicion que le pase por parametro, en este caso 3.
                                  //en el caso de que el i (columna) sea = a 3, que representa la columna, retornar totalSemana....
               totalSemanal = totalSemanal + matriz[i][j]; //hace la suma de todos los numeros de la columna que pertenezan a la semana que le pasamos por parametro
           }   
       }   
    }
    return totalSemanal;
}

// console.log( gastosxsemana(gastosMensuales, 3));


//b) La aplicación también tendrá una parte de estadísticas, para esto nos solicitan dar el total de un día en particular
//por ejemplo del día 3, acá también tengamos en cuenta lo que ocurre con las filas, ya que las columnas también 
//comienzan en 0.

function dia(matriz, dia) {

    let totalDia = 0;
    for (let i = 0; i < matriz.length; i++) {
       for (let j = 0; j < matriz[i].length; j++) {
           if (j === dia - 1) { //el desarrollo es = al de arriba, solo q esta vez buscamos por fila, donde j=fila
            totalDia = totalDia + matriz[i][j];
       }        
    }
}
return totalDia;    
}

// console.log(dia(gastosMensuales, 3 ));


/*c) Por último, es necesario tener el total de gastos realizados en el mes.
Pregunta para pensar, ¿es lo mismo recorrer por filas o por columnas para resolver este último punto?*/

function mensual(matriz) { //en este caso es lo mismo q venimos haciendo pero sin el condicional

    let totalmensual = 0;
    for (let i = 0; i < matriz.length; i++) {
       for (let j = 0; j < matriz[i].length; j++) {
            totalmensual = totalmensual + matriz[i][j];         
    }
}
return totalmensual;   
}

// console.log( mensual(gastosMensuales));


//d) Obtener cuál fue la semana que más gastos se realizaron. Indicar el día que más gastos se realizaron

function gastosMayor(matriz) {

    let gastoMax = 0;
    let indexSemana = - 1;
    
    for (let i = 0; i < matriz.length; i++) {
        let totalSemanal = 0;
        
        for (let j = 0; j < matriz[i].length; j++) {
            totalSemanal = totalSemanal + matriz[i][j];   
        }   
        if (totalSemanal > gastoMax) {
            gastoMax = totalSemanal
            indexSemana = i + 1;
        }
    }
    let resultado = [gastoMax, indexSemana]
    return resultado;
}

//console.log( 'El Gasto Maximo es: ' + gastosMayor(gastosMensuales)[0] + ' y corresponde a la semana: ' + gastosMayor(gastosMensuales)[1]) ;


//BUBBLE SORT 

/* En un concurso de fotografía, donde los usuarios publican una fotografía y obtienen
likes, se registra la cantidad de likes obtenidos por cada usuario en un array. Ordenar
los valores para poder indicar cuál fue la mayor cantidad de likes obtenidos, cuánto
obtuvo el segundo, cuánto el tercero y cuánto el que menos likes obtuvo —suponer
que participaron 15 usuarios y suponer para cada uno, una cantidad de likes—. */

let arrayLikes = [
    {
        usuario : 'pepito123',
        cantidadLikes: 20008,
    },
    {
        usuario : 'josefina2',
        cantidadLikes : 4005,
    },
    {
        usuario : 'juan',
        cantidadLikes: 20030,
    },
    {
        usuario : 'sofia',
        cantidadLikes : 9020,
    }, 
    {
        usuario : 'carlos',
        cantidadLikes: 80700,
    },
    {
        usuario : 'matilda',
        cantidadLikes : 400900,
    },
    {
        usuario : 'connie',
        cantidadLikes: 205300,
    },
    {
        usuario : 'main',
        cantidadLikes : 794200,
    }, 
    {
        usuario : 'cnie',
        cantidadLikes: 2096500,
    },
    {
        usuario : 'man',
        cantidadLikes : 4010,
    }, 
    {
        usuario : 'conn',
        cantidadLikes: 25100,
    },
    {
        usuario : 'ma',
        cantidadLikes : 9100,
    }, 
    {
        usuario : 'ce',
        cantidadLikes: 212000,
    },
    {
        usuario : 'mart',
        cantidadLikes : 91240,
    }, 
    {
        usuario : 'co',
        cantidadLikes: 20450,
    },
];

function ordenar (array) {
    for (let i = 0; i < array.length; i++) {
       for (let j = 0; j < array.length - 1; j++) {
          if (array[j].cantidadLikes < array[j + 1].cantidadLikes) {
            let aux = array[j];
            array[j] = array[j + 1];
            array[j + 1] = aux;
          }
       }
    }
    return arrayLikes;
}

//console.log(ordenar(arrayLikes));

function elPrimero (array) {
    let primero = array[0];
    for (let i = 0; i < array.length; i++) {
      for (let j = 0; j < array.length; j++) {
        if (array[j].cantidadLikes > primero) {
            primero = array[j];
        }
      }
    }
    return primero;
}

//console.log(elPrimero(arrayLikes));

let ganadores = {
    elPrimero : arrayLikes[0],
    elSegundo : arrayLikes[1],
    elTercero : arrayLikes[2],
}

//console.log(ganadores);

/* El servicio meteorológico, para llevar el control diario de temperatura, utiliza un
objeto temperatura donde registra día —valor numérico del día—, mes —valor
numérico—, temperatura máxima y temperatura mínima, correspondiente a dicho
día. Las temperaturas —objeto temperatura— están cargados en un array.
a) Ordenar por temperatura mínima de menor a mayor.
b) Ordenar por temperatura máxima de mayor a menor. */

let arrayServicio = [
    {
        dia : 24,
        mes : 04,
        tempMax : 30,
        tempMin : 20,
    },
    {
        dia : 16,
        mes : 03,
        tempMax : 25,
        tempMin : 10,
    },
    {
        dia : 8,
        mes : 11,
        tempMax : 10,
        tempMin : 2,
    },
    {
        dia : 7,
        mes : 05,
        tempMax : 15,
        tempMin : 7,
    },
]

function ordenaMax (array) {
    for (let i = 0; i < array.length; i++) {
       for (let j = 0; j < array.length - 1; j++) {
          if (array[j].tempMax < array[j + 1].tempMax) {
            let aux = array[j];
            array[j] = array[j + 1];
            array[j + 1] = aux;
          }
       }
    }
    return arrayServicio;
}

//console.log(ordenaMax(arrayServicio));

function ordenaMin (array) {
    for (let i = 0; i < array.length; i++) {
       for (let j = 0; j < array.length - 1; j++) {
          if (array[j].tempMin > array[j + 1].tempMin) {
            let aux = array[j];
            array[j] = array[j + 1];
            array[j + 1] = aux;
          }
       }
    }
    return arrayServicio;
}

//console.log(ordenaMin(arrayServicio));

//RECORRIDO MATRIZ EN DIAGONAL + CREAR 1 MATRIZ

/**
 * Declara una variable que contenga una matriz
 * de 5x5 llena de puros numeros enteros y positivos
 */
/**
 * Luego, escribe un algoritmo para sumar todos
 * los numeros en la matriz.
 */

 let matriz = [
    [1, 2, 3, 4, 5],
    [12, 22, 33, 44, 55],
    [13, 23, 34, 45, 56],
    [14, 24, 35, 46, 57],
    [15, 25, 36, 47, 58],
]

function recorrido (params) { //para recorrer en diagonal
    let totaldiagonal = 0; //acumulador
    for (let index = 0; index < params.length; index++) {
       totaldiagonal = totaldiagonal + params[index][index]; //el 2do index representa la columna(vertical).
    }
    return totaldiagonal;
}

//console.log(recorrido(matriz));

function recorrido1(params) { //recorrer en diagonal invertida
        let aux = params[0].length - 1; //auxiliar empieza desde la posicion 0.length - 1 para indicarle que va a ser de derecha a izquierda
      
        for (let f = 0; f < params.length; f++) {
            for (let c = params[f].length - 1; c >= 0; c--) {
            if (aux === c) { //si el aux es igual a la columna (vertical) consoleame:
               console.log(params[f][c]); 
                }
            }
            aux = aux - 1; 
        }
}

recorrido1(matriz);
//console.log(recorrido1(matriz5x5));
    
//OTRA FORMA MAS FACIL
    
function recorrido2(params){
    let total = 0; 
    let aux = params[0].length - 1; 
    
    for (let i = 0; i < params.length; i++) {
        total = total + params[i][aux];
        aux--;
    }
    return total
}   

//console.log(recorrido2(matriz));



function sumaTotal (array) {
    let total = 0;
    for (let i = 0; i < array.length; i++) {
       for (let j = 0; j < array[i].length; j++) {
           total = total + matriz[i][j];
       }
    }
    return total;
}

sumaTotal(matriz);
//console.log(matriz);


let matriz2 = []

 function crear(matriz, longitud) { //pasa x parametro la matriz y su longitud
     let valor = 0; //crea var para almacenar
   for (let i = 0; i < longitud ; i++) {
         let elementos =[] //crea la var elementos q va a tener 1 array vacio en donde vamos a pushear los valores
     for (let j = 0; j < longitud; j++) {
         valor = valor + 5;  //va de 5 en 5
         elementos.push(valor);  //incluye a los valores en el array
     }
     matriz.push(elementos); //incluye el array a la matriz
   }
}

crear(matriz2, 6); //pasa como valor la matriz y la cantidad de filas y columnas q quiero tener dentro de la matriz 
//console.log(matriz2);



/* para pushear una matriz cuadrada diferente filas y columnas */

let matriz3 = []

 function crear(matriz, fila, col) {
    let valor = 0; //crea var para almacenar

   for (let i = 0; i < fila ; i++) {

         let elementos =[] //crea el array elementos para desp pushearle los valores

     for (let j = 0; j < col; j++) {
         valor = valor + 5; //los valores van de 5 en 5

         elementos.push(valor);  //ingresan los valores al array elementos
     }
     matriz.push(elementos); //ingresa el array elementos a la matriz
   }
}

crear(matriz3, 6, 3); //6 columnas y 3 filas
//console.log(matriz3);


//MAS BUBBLE SORT

/**
* Escribir una función que
*  reciba un array de elementos
* e indique si se encuentran ordenados
*  de menor a mayor o no.
*
* La función debe retornar un booleano: true si el array esta ordenado, false, si no.
* */


let pruebaA = [4, 3, 1, 7, 9, 0, 4, 2];
let pruebaB = [1, 2, 3, 4, 5, 6, 7, 8];


// Comprueba tu función con los 2 arrays en dos llamadas independientes

function estaOrdenado (array) {
    for (let i = 0; i < array.length; i++) {
        for (let j = 0; j < array.length; j++) {
            if (array[j] < array[j + 1]) {
                return false;
            } else {
                return true;
            }
        }
    }
}

//console.log(estaOrdenado(pruebaA));
//console.log(estaOrdenado(pruebaB));